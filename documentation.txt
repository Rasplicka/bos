Zásady pro tvo?ení názv?
a) Názvy soubor?
- pou?ívají se malá písmena
- první slovo by m?lo vyjad?ovat ?eho se soubor týká, nap?. USB driver bude za?ínat "usb"
- pokud je název slo?en z více slov, jsou odd?lena podtr?ítkem nap?. "usb_device_mm.c"
- ?íslo v názvu se neodd?luje podtr?ítkem nap?. "disp9341.h", nebo "timer1_mm.S"
- pokud je soubor ur?en pouze pro jednu ?adu (MM/MK/MZ) obsahuje tuto informaci v názvu, na konci. Viz. p?edchozí p?íklad

usb_device_mm.c - ovlada? usb device, pouze pro ?adu MM
disp1306.c - ovlada? displeje SSD1306, pro v?echny ?ady


b) Názvy funkcí
- v?echny funkce, které pat?í pouze do daného modulu jsou definovány direktivou static nap?. "static short getWidth();"
  tím nedojde ke konfliktu názv? mezi r?znými moduly (static znamená n?co jako LOCAL)
- názvy funkcí za?ínají malým písmenem, a pokud jsou slo?eny z více slov, za?átek dal?ího slova je zd?razn?n 
  velkým písmenem nap?. "getFormWidth()"
- globální funkce, volané z jiných modul?, za?ínají názvem, který napovídá název souboru a podtr?ítkem
  nap?. disp9341_driver() je globální fce ovlada?e disp9341. 
  nebo usbDeviceMM_Init() - inicializa?ní fce v souboru usb_device_mm.c

- inicializa?ní fce modul? mají na konci názvu _Init viz. vý?e
- pokud je v názvu ozna?ení ?ady procesor?, píse se velkými písmeny MM/MK/MZ (MMK - ?ada MM + MK, MZK - ?ada MZ + MK, atd...)

static void setValue() - lokální fce (kdekoliv)
void disp9341_setDriver() - globální fce v souboru disp9341.c
void usbDeviceMM_setBuffer() - globální fce v souboru usb_device_mm.c

c) R?zné verze
- má-li t?eba ovlada? více verzí, p?idá se na konec názvu souboru _v1, _v2, ...
  nap?. usb_device_mm_v1.c, usb_device_mz_v2.c
- to platí v p?ípad?, ?e je v projektu více verzí jednoho souboru, pokud je pouze jeden (a m??e to být jakákoliv verze) 
  pak v názvu souboru ?íslo verze menusí být.

P?i více verzích v jednom projektu se postupuje takto:
------------------------------------------------------
p?íklad výb?ru modulu v2 (pro ?adu MM):
- usb_device_mm.c 
- usb_device_mm_v2.c
- usb_device_mz.c

v souboru def.h
#define     USB_DEVICE_INIT         //definuje pou?ití usb device (startup systému bude volat usbDevice_Init)
//p?idá se náslehující definice
#define     USB_DEVICE_VERSION  2   //definuje, ?e pou?ije verzi 2 

v souboru usb_device_mm.c
#if (defined PIC32MM && USB_DEVICE_VERSION <= 1)
... celý obsah modulu
void usbDevice_Init() {...}
#endif

v souboru usb_device_mm_v2.c
#if (defined PIC32MM &&  USB_DEVICE_VERSION == 2)
... celý obsah modulu
void usbDevice_Init() {...}
#endif

v souboru usb_device_mz.c
#if (defined PIC32MZ)
... celý obsah modulu
void usbDevice_Init() {...}
#endif


To znamená, ?e díky definici USB_DEVICE_INIT bude startup systému volat inicializa?ní fci usbDevice_Init()
ale zkompilovaná bude pouze jedna (ze souboru usb_device_mm_v2.c) díky definici USB_DEVICE_INIT_V2. Kdyby
nebylo definováno USB_DEVICE_INIT_V2, pou?ije se soubor usb_device_mm.c (pro ?adu MM) nebo usb_device_mz
(pro ?adu MZ)




#if defined BUFSIZE && BUFSIZE >= 1024
#if defined (MAX) && ! defined (MIN) 