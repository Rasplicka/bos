//font pro ssd1306, fixedsys, 16x8
//page 0, b0 - horni radek
//page 0, b7 - osmy radek (nejprve 8x sloupec page0)
//page 1, b0 - devaty radek
//page 1, b7 - sestnacty radek (pak 8x sloupec page 1)

//font nebo image se generuje programem lcd-image-converter
//pro ssd1306 plati toto nastaveni
//1. load image (nebo font)
//2. okno Options: Prepare: Monochrome, MainScanDirection=Left To Right, LineScanDirection=Forward, Bands=8px
//3. okno Reordering: prehodit b0>b7, b1>b6, b2>b5, b3>b4, ... 
//4. okno Options: Image: BlockSize=8bit, ByteOrder=Little Endian
//Kazdy bajt je sloupec 8 pixelu, b0=horni px, b7=dolni px. Nejprve se plni prvni radek (8 px na vysku), pak druhy radek atd...
//Tzn. ze napr. 10 bytes na jednom radku vytvori box 8(h) x 10(w) px

//8x8 en
const FONT_HEAD spfont_fixed8 __section(".rodata") __attribute__((aligned(4))) = {
    0x3,                //fileID
    0x1,                //format
    8,                  //blockSize
    0,                  //compresion
    8,                  //width
    8,                  //Height 
    0x0C,               //itemSize
    0x20,               //firstAscii code
    0x80,               //firstVarAscii
    0,                  //style
    6,                 //lineOffset
    32,                 //dataOffset
    0,                  //dummy int
    "fixed8",       //name
};
const char spfont_fixed8_data[] __section(".rodata") = {
    //ascii, width, data size16 (data + 4)
 
    // 
    0x20, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    //!
    0x21, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x00,
    //"
    0x22, 8, 0xc, 0x0,
    0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00,
    //#
    0x23, 8, 0xc, 0x0,
    0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14, 0x00, 0x00,
    //$
    0x24, 8, 0xc, 0x0,
    0x00, 0x24, 0xca, 0x4a, 0x53, 0x24, 0x00, 0x00,
    //%
    0x25, 8, 0xc, 0x0,
    0x00, 0x46, 0x26, 0x10, 0x08, 0x64, 0x62, 0x00,
    //&
    0x26, 8, 0xc, 0x0,
    0x00, 0x3a, 0x45, 0x4a, 0x34, 0x4c, 0x00, 0x00,
    //'
    0x27, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
    //(
    0x28, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00,
    //)
    0x29, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00,
    //*
    0x2a, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00,
    //+
    0x2b, 8, 0xc, 0x0,
    0x00, 0x00, 0x10, 0x38, 0x10, 0x00, 0x00, 0x00,
    //,
    0x2c, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00,
    //-
    0x2d, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00,
    //.
    0x2e, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
    ///
    0x2f, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00,
    //0
    0x30, 8, 0xc, 0x0,
    0x00, 0x00, 0x3e, 0x41, 0x41, 0x3e, 0x00, 0x00,
    //1
    0x31, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x02, 0x7f, 0x00, 0x00, 0x00,
    //2
    0x32, 8, 0xc, 0x0,
    0x00, 0x00, 0x62, 0x51, 0x49, 0x66, 0x00, 0x00,
    //3
    0x33, 8, 0xc, 0x0,
    0x00, 0x00, 0x22, 0x41, 0x49, 0x36, 0x00, 0x00,
    //4
    0x34, 8, 0xc, 0x0,
    0x00, 0x00, 0x18, 0x56, 0x7f, 0x50, 0x00, 0x00,
    //5
    0x35, 8, 0xc, 0x0,
    0x00, 0x00, 0x27, 0x45, 0x45, 0x39, 0x00, 0x00,
    //6
    0x36, 8, 0xc, 0x0,
    0x00, 0x00, 0x3e, 0x49, 0x49, 0x30, 0x00, 0x00,
    //7
    0x37, 8, 0xc, 0x0,
    0x00, 0x00, 0x03, 0x71, 0x0d, 0x03, 0x00, 0x00,
    //8
    0x38, 8, 0xc, 0x0,
    0x00, 0x00, 0x36, 0x49, 0x49, 0x36, 0x00, 0x00,
    //9
    0x39, 8, 0xc, 0x0,
    0x00, 0x00, 0x06, 0x49, 0x49, 0x3e, 0x00, 0x00,
    //:
    0x3a, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00,
    //;
    0x3b, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00,
    //<
    0x3c, 8, 0xc, 0x0,
    0x00, 0x00, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00,
    //=
    0x3d, 8, 0xc, 0x0,
    0x00, 0x00, 0x28, 0x28, 0x28, 0x00, 0x00, 0x00,
    //>
    0x3e, 8, 0xc, 0x0,
    0x00, 0x00, 0x44, 0x28, 0x10, 0x00, 0x00, 0x00,
    //?
    0x3f, 8, 0xc, 0x0,
    0x00, 0x00, 0x02, 0x51, 0x09, 0x06, 0x00, 0x00,
    //@
    0x40, 8, 0xc, 0x0,
    0x3c, 0x42, 0x99, 0xa5, 0x9d, 0xa1, 0x22, 0x1c,
    //A
    0x41, 8, 0xc, 0x0,
    0x40, 0x70, 0x5c, 0x13, 0x5c, 0x70, 0x40, 0x00,
    //B
    0x42, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x49, 0x49, 0x36, 0x00,
    //C
    0x43, 8, 0xc, 0x0,
    0x00, 0x3e, 0x41, 0x41, 0x41, 0x23, 0x00, 0x00,
    //D
    0x44, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x41, 0x41, 0x41, 0x3e, 0x00,
    //E
    0x45, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x49, 0x63, 0x00, 0x00,
    //F
    0x46, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x09, 0x03, 0x00, 0x00,
    //G
    0x47, 8, 0xc, 0x0,
    0x00, 0x3e, 0x41, 0x41, 0x49, 0x49, 0x7b, 0x00,
    //H
    0x48, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x49, 0x7f, 0x41, 0x00,
    //I
    0x49, 8, 0xc, 0x0,
    0x00, 0x00, 0x41, 0x7f, 0x41, 0x00, 0x00, 0x00,
    //J
    0x4a, 8, 0xc, 0x0,
    0x00, 0x00, 0x60, 0x41, 0x3f, 0x01, 0x00, 0x00,
    //K
    0x4b, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x14, 0x63, 0x41, 0x00,
    //L
    0x4c, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x41, 0x40, 0x60, 0x00, 0x00,
    //M
    0x4d, 8, 0xc, 0x0,
    0x41, 0x7f, 0x46, 0x18, 0x18, 0x46, 0x7f, 0x41,
    //N
    0x4e, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x46, 0x18, 0x7f, 0x01, 0x00,
    //O
    0x4f, 8, 0xc, 0x0,
    0x00, 0x3e, 0x41, 0x41, 0x41, 0x41, 0x3e, 0x00,
    //P
    0x50, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x09, 0x06, 0x00, 0x00,
    //Q
    0x51, 8, 0xc, 0x0,
    0x00, 0x3e, 0x41, 0x41, 0x41, 0x41, 0xbe, 0x00,
    //R
    0x52, 8, 0xc, 0x0,
    0x00, 0x41, 0x7f, 0x49, 0x19, 0x66, 0x00, 0x00,
    //S
    0x53, 8, 0xc, 0x0,
    0x00, 0x00, 0x66, 0x49, 0x49, 0x33, 0x00, 0x00,
    //T
    0x54, 8, 0xc, 0x0,
    0x00, 0x03, 0x41, 0x7f, 0x41, 0x03, 0x00, 0x00,
    //U
    0x55, 8, 0xc, 0x0,
    0x00, 0x3f, 0x41, 0x40, 0x41, 0x3f, 0x00, 0x00,
    //V
    0x56, 8, 0xc, 0x0,
    0x00, 0x03, 0x1d, 0x60, 0x60, 0x1d, 0x03, 0x00,
    //W
    0x57, 8, 0xc, 0x0,
    0x00, 0x1f, 0x61, 0x18, 0x18, 0x61, 0x1f, 0x00,
    //X
    0x58, 8, 0xc, 0x0,
    0x00, 0x41, 0x63, 0x1c, 0x1c, 0x63, 0x41, 0x00,
    //Y
    0x59, 8, 0xc, 0x0,
    0x01, 0x03, 0x44, 0x78, 0x44, 0x03, 0x01, 0x00,
    //Z
    0x5a, 8, 0xc, 0x0,
    0x00, 0x00, 0x73, 0x49, 0x45, 0x63, 0x00, 0x00,
    //[
    0x5b, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0x00,
    // zpetne lomitko
    0x5c, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x0f, 0x70, 0x00, 0x00, 0x00,
    //]
    0x5d, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00,
    //^
    0x5e, 8, 0xc, 0x0,
    0x00, 0x00, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00,
    //_
    0x5f, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    //`
    0x60, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00,
    //a
    0x61, 8, 0xc, 0x0,
    0x00, 0x00, 0x20, 0x54, 0x54, 0x78, 0x00, 0x00,
    //b
    0x62, 8, 0xc, 0x0,
    0x00, 0x01, 0x3f, 0x44, 0x44, 0x38, 0x00, 0x00,
    //c
    0x63, 8, 0xc, 0x0,
    0x00, 0x00, 0x38, 0x44, 0x44, 0x28, 0x00, 0x00,
    //d
    0x64, 8, 0xc, 0x0,
    0x00, 0x00, 0x38, 0x44, 0x45, 0x7f, 0x00, 0x00,
    //e
    0x65, 8, 0xc, 0x0,
    0x00, 0x00, 0x38, 0x54, 0x54, 0x18, 0x00, 0x00,
    //f
    0x66, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x7e, 0x49, 0x00, 0x00, 0x00,
    //g
    0x67, 8, 0xc, 0x0,
    0x00, 0x00, 0x18, 0x24, 0xa4, 0xfc, 0x00, 0x00,
    //h
    0x68, 8, 0xc, 0x0,
    0x00, 0x01, 0x7f, 0x08, 0x04, 0x78, 0x00, 0x00,
    //i
    0x69, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00, 0x00,
    //j
    0x6a, 8, 0xc, 0x0,
    0x00, 0x00, 0x80, 0xfd, 0x00, 0x00, 0x00, 0x00,
    //k
    0x6b, 8, 0xc, 0x0,
    0x00, 0x01, 0x7f, 0x18, 0x64, 0x40, 0x00, 0x00,
    //l
    0x6c, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00,
    //m
    0x6d, 8, 0xc, 0x0,
    0x7c, 0x08, 0x04, 0x78, 0x08, 0x04, 0x78, 0x00,
    //n
    0x6e, 8, 0xc, 0x0,
    0x00, 0x04, 0x7c, 0x08, 0x04, 0x78, 0x00, 0x00,
    //o
    0x6f, 8, 0xc, 0x0,
    0x00, 0x00, 0x38, 0x44, 0x44, 0x38, 0x00, 0x00,
    //p
    0x70, 8, 0xc, 0x0,
    0x00, 0x04, 0xfc, 0x24, 0x24, 0x18, 0x00, 0x00,
    //q
    0x71, 8, 0xc, 0x0,
    0x00, 0x00, 0x18, 0x24, 0x24, 0xfc, 0x04, 0x00,
    //r
    0x72, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x00,
    //s
    0x73, 8, 0xc, 0x0,
    0x00, 0x00, 0x48, 0x54, 0x24, 0x00, 0x00, 0x00,
    //t
    0x74, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x3e, 0x44, 0x00, 0x00, 0x00,
    //u
    0x75, 8, 0xc, 0x0,
    0x00, 0x00, 0x3c, 0x40, 0x20, 0x7c, 0x00, 0x00,
    //v
    0x76, 8, 0xc, 0x0,
    0x00, 0x00, 0x1c, 0x60, 0x60, 0x1c, 0x00, 0x00,
    //w
    0x77, 8, 0xc, 0x0,
    0x00, 0x1c, 0x60, 0x18, 0x60, 0x1c, 0x00, 0x00,
    //x
    0x78, 8, 0xc, 0x0,
    0x00, 0x00, 0x6c, 0x10, 0x10, 0x6c, 0x00, 0x00,
    //y
    0x79, 8, 0xc, 0x0,
    0x00, 0x00, 0x3c, 0x40, 0xc0, 0x3c, 0x00, 0x00,
    //z
    0x7a, 8, 0xc, 0x0,
    0x00, 0x00, 0x64, 0x54, 0x4c, 0x00, 0x00, 0x00,
    //{
    0x7b, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x10, 0xff, 0x00, 0x00, 0x00,
    //|
    0x7c, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00,
    //}
    0x7d, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0xef, 0x10, 0x00, 0x00, 0x00,
    //~
    0x7e, 8, 0xc, 0x0,
    0x00, 0x00, 0x04, 0x02, 0x04, 0x02, 0x00, 0x00,
    //°
    0x7f, 8, 0xc, 0x0,
    0x00, 0x00, 0x00, 0x00, 0x04, 0x0a, 0x04, 0x00,
    
    //konec
    0x0, 0x0, 0x0, 0x0
    
};
